I"_<blockquote>
  <p>본 글은 <a href="https://www.opentutorials.org/module/4058/24738">생활코딩 react</a>를 정리한 글입니다.</p>
</blockquote>

<h1 id="state란">State란?</h1>

<ul>
  <li>
    <p>하나의 제품을 쓸 때는 사용자와 구현자로 나뉜다. 아이폰을 예로 들면 사용자는 화면을 터치하는 것이고, 구현자는 내부 부품들을 만드는 것이다.</p>
  </li>
  <li>
    <p>리액트의 관점에서는 props는 사용자의 입장에서 컴포넌트를 조작하게 하는 데이터이다. 반면 <strong>state</strong>는 내부 조작을 가능하게 하는 데이터이다.</p>
  </li>
  <li>
    <p>“state”는 사용자에게 알 필요 없는 컴포넌트의 내부적으로 다루는 정보이다.</p>
  </li>
  <li>
    <p>리액트에서 좋은 Component를 만들기 위해서 외부의 props와 실제 내부의 state가 철저히 분리되어있어야 한다.</p>
  </li>
</ul>

<blockquote>
  <p>개인적인 생각으로는 props와 state는 JAVA의 캡슐화와 비슷한 개념이라고 생각한다. 변수를 getter(), setter()로 조작하게 할 것이냐, getter()로 내부 조작만 하게 할 것이냐와 비슷하다고 생각한다.</p>
</blockquote>

<h1 id="state의-사용">state의 사용</h1>

<ul>
  <li>컴포넌트의 값을 초기화 시켜주고 싶으면 consturctor안에 값을 넣으면 된다.</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nx">App</span> <span class="kd">extends</span> <span class="nx">Component</span><span class="p">{</span>
    <span class="kd">constructor</span><span class="p">(</span><span class="nx">props</span><span class="p">){</span>
        <span class="k">super</span><span class="p">(</span><span class="nx">props</span><span class="p">);</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">state</span> <span class="o">=</span> <span class="p">{</span>
            <span class="na">subject</span> <span class="p">:</span> <span class="p">{</span><span class="na">title</span><span class="p">:</span><span class="dl">"</span><span class="s2">WEB</span><span class="dl">"</span><span class="p">,</span> <span class="na">sub</span><span class="p">:</span><span class="dl">"</span><span class="s2">World Wide Web!</span><span class="dl">"</span><span class="p">}</span>
        <span class="p">}</span>        
    <span class="p">}</span>
    <span class="nx">render</span><span class="p">(){</span>
        <span class="k">return</span><span class="p">(</span>

        <span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div>

<ul>
  <li>상위 컴포넌트 state값을 하위 컴포넌트 props로 전달 가능하다.</li>
</ul>

<h1 id="state를-쓰는-이유">state를 쓰는 이유</h1>

<ul>
  <li>state를 쓰면 컴포넌트의 사용성이 증가한다.
    <ul>
      <li>만약 글 목록을 보여주는 컴포넌트가 있다면 상위 컴포넌트의 state값을 하위 컴포넌트 props로 전달만 해주면 된다.</li>
      <li>그러면, 컴포넌트의 내부 데이터를 상위 컴포넌트에서 관리할 수 있게 된다.</li>
    </ul>
  </li>
  <li>
    <p>글 목록 보여주는 컴포넌트를</p>
  </li>
  <li>key값을 줘야 한다. 이 key값은</li>
</ul>
:ET