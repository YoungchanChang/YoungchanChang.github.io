I"=<blockquote>
  <p>본 글은 <a href="https://opentutorials.org/course/743/4724">생활코딩</a>강의를 요약, 정리한 글입니다.</p>
</blockquote>

<ul>
  <li>모듈, API, 레퍼런스, 튜토리얼, 정규표현식의 개념에 대해 작성함</li>
</ul>

<h1 id="모듈">모듈</h1>

<h3 id="모듈의-정의">모듈의 정의</h3>

<ul>
  <li>프로그램 내부를 <strong>기능별 단위로 분할한 부분</strong>으로 부품을 간단하게 떼서 <strong>교환이 쉽도록 설계</strong>되어 있을 때의 그 각 구성 요소를 의미한다</li>
</ul>

<h3 id="모듈을-쓰는-이유">모듈을 쓰는 이유</h3>

<ol>
  <li>자주 사용되는 코드를 별도의 파일로 만들어서 <strong>필요할 때마다 재활용</strong>할 수 있다.</li>
  <li>코드를 개선하면 이를 <strong>사용하고 있는 모든 애플리케이션의 동작이 개선</strong>된다.</li>
  <li>코드 수정 시에 <strong>필요한 로직을 빠르게 찾을</strong> 수 있다.</li>
  <li><strong>필요한 로직만을 로드</strong>해서 메모리의 낭비를 줄일 수 있다.</li>
  <li>한번 다운로드된 모듈은 웹브라우저에 의해서 저장되기 때문에 동일한 로직을 로드 할 때 시간과 네트워크 트래픽을 절약 할 수 있다.(브라우저에서만 해당)</li>
</ol>

<h3 id="모듈을-쓰는-방법">모듈을 쓰는 방법</h3>

<ol>
  <li>Html에서 모듈을 쓰는 방법
1-1) 자바스크립트 파일 확장자로 파일을 만든다.
1-2) html파일을 생성하고,html에서 head태그 안에 <code class="language-plaintext highlighter-rouge">&lt;script src="js파일"&gt;&lt;/script&gt;</code>코드를 넣는다.(경우에 따라서 body태그 뒤에 넣기도 한다.)
1-3) 쓰고싶은 위치에 <code class="language-plaintext highlighter-rouge">&lt;script&gt;&lt;/script&gt;</code>구문을 통해 구현한다.</li>
</ol>

<ul>
  <li>예시
    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">welcome</span><span class="p">(){</span>
  <span class="k">return</span> <span class="dl">'</span><span class="s1">Hello world</span><span class="dl">'</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div>    </div>
    <p>```html</p>
  </li>
</ul>
<head>
    <meta charset="utf-8" />
    <script src="greeting.js"></script>
</head>
<body>
    <script>
        alert(welcome());
    </script>
</body>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
2. Node.js에서 모듈을 쓰는 방법
1-1) 자바스크립트 파일 확장자로 파일을 만든다.
1-2) 모듈을 만들고 싶은 확장자는 `exports`키워드를 이용한다. 구체적인 방법은 아래와 같다.

예시1) exports.이름을 통해 함수를 정의한다.
```javascript
var PI = Math.PI;
exports.area = function (r) {
return PI * r * r;
};
</code></pre></div></div>

<p>예시2) 모듈.exprots에 변수를 담은 객체를 대입한다. 해당 파일은 모듈로서 기능한다.</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">odd</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">홀수</span><span class="dl">'</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">even</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">짝수</span><span class="dl">'</span><span class="p">;</span>

<span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">odd</span><span class="p">,</span> <span class="nx">even</span> <span class="p">}</span>
</code></pre></div></div>

<p>1-3) 모듈을 로드할 때는 <code class="language-plaintext highlighter-rouge">require</code>키워드를 쓴다
예시)</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">circle</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">./node.circle.js</span><span class="dl">'</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span> <span class="dl">'</span><span class="s1">The area of a circle of radius 4 is </span><span class="dl">'</span>
           <span class="o">+</span> <span class="nx">circle</span><span class="p">.</span><span class="nx">area</span><span class="p">(</span><span class="mi">4</span><span class="p">));</span>
</code></pre></div></div>

<h3 id="추가로-알아야-할-사항">추가로 알아야 할 사항</h3>

<ul>
  <li>모듈이 프로그램을 구성하는 <strong>작은 부품으로서의 로직</strong>을 의미한다면 라이브러리는 자주 사용되는 로직을 재사용하기 편리하도록 잘 정리한 일련의 <strong>코드들의 집합</strong>을 의미한다</li>
</ul>

<h1 id="api">API</h1>

<h3 id="api의-개념">API의 개념</h3>

<ul>
  <li>
    <p>API의 정의는 프로그램이 동작하는 환경을 제어하기 위해서 환경에서 제공되는 <code class="language-plaintext highlighter-rouge">조작 장치</code>이다.</p>
  </li>
  <li>
    <p>API를 쉽게 비유하면 설명서로 비유할 수 있다. 하나의 제품(어플리케이션 프로그램)을 어떻게 조작하는지(Interface) 알려준다.</p>
  </li>
</ul>

<h3 id="레퍼런트와-튜토리얼">레퍼런트와 튜토리얼</h3>

<ul>
  <li>
    <p>플랫폼에서는 일반적으로 레퍼런스와 튜토리얼을 제공한다.</p>
  </li>
  <li>
    <p>튜토리얼은 안내서이고, 튜토리얼을 통해서 해당 환경이 어떤 기능을 제공하는가에 대한 사전에 알고 있어야 하는 것을 알아야 한다.</p>
  </li>
  <li>
    <p>플랫폼이의 환경이 제공하는 명령을 찾아야 한다. refence는 사전이다.</p>
  </li>
  <li>
    <p>튜토리얼은 문법으로 비유할 수 있다면, 레퍼런스는 언어의 사전으로 비유할 수 있다.</p>
  </li>
</ul>

<h1 id="정규표현식">정규표현식</h1>

<h3 id="정규표현식이란">정규표현식이란</h3>

<ul>
  <li>문자열을 처리하는 방법 중의 하나로 <strong>특정한 조건의 문자를 ‘검색’하거나 ‘치환’하는 과정</strong>을 매우 간편하게 처리 할 수 있도록 하는 수단이다</li>
</ul>

<h3 id="정규표현식을-쓰는-이유">정규표현식을 쓰는 이유</h3>

<ul>
  <li>
    <p>웹과 관련된, 정보와 관련된 일에서는 정규표현식이 매우 중요하다. <strong>정보를 찾아서 처리할 때 쓰인다.</strong></p>
  </li>
  <li>
    <p>나의 경우에는 <strong>아이디값 검증, 비밀번호 검증할 때</strong> 값의 유효성 검증을 위해 정규표현식을 썼었다.</p>
  </li>
</ul>

<h3 id="정규표현식을-쓰는-방법">정규표현식을 쓰는 방법</h3>

<ul>
  <li>
    <p>정규표현식은 컴파일(compile)과 실행(execution)으로 이루어진다.</p>
  </li>
  <li>컴파일(compile)</li>
  <li>컴파일은 검출하고자 하는 패턴을 만드는 일이다. 이 방법은 두 가지가 있다. 아래 예쩨는 a라는 텍스트를 찾는 정규표현식을 만드는 것이다.</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="sr">/a/</span>
<span class="kd">var</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">);</span>
</code></pre></div></div>

<ul>
  <li>실행(execution)</li>
  <li>1) 정규식을 이용해 문자열에서 원하는 문자를 찾아내기</li>
  <li>RegExp.exec()는 배열을 리턴하고 RegExp.test()는 true, false를 리턴한다.</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//배열을 리턴</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">pattern</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="dl">'</span><span class="s1">abcdef</span><span class="dl">'</span><span class="p">));</span> 
<span class="c1">// true 아니면 false를 리턴</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">pattern</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="dl">'</span><span class="s1">abcdef</span><span class="dl">'</span><span class="p">));</span>
</code></pre></div></div>

<ul>
  <li>2) 문자열의 메소드를 이용해 문자열에서 원하는 문자를 찾아내기</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// RegExp.exec()와 비슷하다.</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">abcdef</span><span class="dl">'</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">pattern</span><span class="p">));</span>
<span class="c1">// 문자열에서 패턴을 검색해서 이를 변경한 후에 변경된 값을 리턴한다.</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">abcdef</span><span class="dl">'</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">pattern</span><span class="p">,</span> <span class="dl">'</span><span class="s1">A</span><span class="dl">'</span><span class="p">));</span>
</code></pre></div></div>

<h3 id="추가로-알아야할-사항">추가로 알아야할 사항</h3>

<ul>
  <li>옵션</li>
  <li>정규표현식 패턴을 만들 때 옵션을 설정할 수 있다. 옵션에 따라서 검출되는 데이터가 달라진다.</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// i를 붙이면 대소문자를 구분하지 않느다.</span>
<span class="kd">var</span> <span class="nx">oi</span> <span class="o">=</span> <span class="sr">/a/i</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Abcde</span><span class="dl">"</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">oi</span><span class="p">));</span> <span class="c1">// ["A"];</span>
<span class="c1">// g를 붙이면 검색된 모든 결과를 리턴한다.</span>
<span class="kd">var</span> <span class="nx">og</span> <span class="o">=</span> <span class="sr">/a/g</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">abcdea</span><span class="dl">"</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">og</span><span class="p">));</span>
</code></pre></div></div>

<ul>
  <li>캡처</li>
  <li>괄호안의 패턴은 마치 변수처럼 재사용할 수 있다. 이 때 기호 $를 사용하는데 아래 코드는 coding과 everybody의 순서를 역전시킨다.</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">pattern</span> <span class="o">=</span> <span class="sr">/</span><span class="se">(\w</span><span class="sr">+</span><span class="se">)\s(\w</span><span class="sr">+</span><span class="se">)</span><span class="sr">/</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">str</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">coding everybody</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">str</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">pattern</span><span class="p">,</span> <span class="dl">"</span><span class="s2">$2, $1</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span>
</code></pre></div></div>

<ul>
  <li>치환</li>
  <li>아래 코드는 본문 중의 URL을 링크 html 태그로 교체한다.</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">urlPattern</span> <span class="o">=</span> <span class="sr">/</span><span class="se">\b(?:</span><span class="sr">https</span><span class="se">?)</span><span class="sr">:</span><span class="se">\/\/[</span><span class="sr">a-z0-9-+&amp;@#</span><span class="se">\/</span><span class="sr">%?=~_|!:,.;</span><span class="se">]</span><span class="sr">*/gim</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">content</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">생활코딩 : http://opentutorials.org/course/1 입니다. 네이버 : http://naver.com 입니다. </span><span class="dl">'</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">content</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">urlPattern</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">url</span><span class="p">){</span>
    <span class="k">return</span> <span class="dl">'</span><span class="s1">&lt;a href="</span><span class="dl">'</span><span class="o">+</span><span class="nx">url</span><span class="o">+</span><span class="dl">'</span><span class="s1">"&gt;</span><span class="dl">'</span><span class="o">+</span><span class="nx">url</span><span class="o">+</span><span class="dl">'</span><span class="s1">&lt;/a&gt;</span><span class="dl">'</span><span class="p">;</span>
<span class="p">});</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">);</span>
</code></pre></div></div>

<h3 id="추가로-드는-나의-생각">추가로 드는 나의 생각</h3>

<ul>
  <li>파이썬에서 웹 크롤링을 할 때에도 쓰일 수 있지 않을까?</li>
</ul>

<h1 id="참조">참조</h1>
<ul>
  <li><a href="https://opentutorials.org/course/743/6580">생활코딩 정규식 요약본</a></li>
  <li><a href="https://opentutorials.org/course/909/5142">생활코딩 정규식</a></li>
  <li><a href="https://regexper.com/">정규표현식을 시각화</a></li>
  <li><a href="https://regexr.com/">정규표현식 빌더</a></li>
</ul>
:ET