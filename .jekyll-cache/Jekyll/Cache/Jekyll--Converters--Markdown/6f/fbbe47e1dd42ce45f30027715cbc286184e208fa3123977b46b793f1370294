I"b<blockquote>
  <p>본 글은 <a href="https://opentutorials.org/course/743/6544">생활코딩</a>강의를 요약, 정리한 글입니다.</p>
</blockquote>

<h1 id="클로저">클로저</h1>

<h3 id="클로저란">클로저란?</h3>

<ul>
  <li>내부함수가 외부함수의 맥락(context)에 접근할 수 있는 것을 클로저라고 한다.</li>
</ul>

<h3 id="왜-클로저를-쓸까">왜 클로저를 쓸까?</h3>

<ul>
  <li>자바스크립트에서 <strong>변수를 private으로 쓸 때</strong> 쓰인다. 변수를 private으로 만들면 정보를 아무나 수정하도록 하는 것을 방지할 수 있다. 많은 데이터가 S/W안에서 존재하는데, <strong>누구나 수정할 수 있으면 해당 S/W가 망가질 가능성이 크게</strong> 된다.</li>
</ul>

<h3 id="클로저를-쓰는-방법">클로저를 쓰는 방법</h3>

<ul>
  <li>
    <p>아래의 예제에서 title은 지역변수이다. title의 지역변수는 return된 객체의 메소드(get_title, set_title)만으로 접근이 가능하다.</p>
  </li>
  <li>
    <p>factory_movie라는 외부 함수 자체는 호출과 동시에 소멸이 됬기 때문에 지역변수인 title은 factory_movie의 내부함수인 get_title()와 set_title()을 통해서만 접근이 가능하다.</p>
  </li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">factory_movie</span><span class="p">(</span><span class="nx">title</span><span class="p">){</span>
    <span class="k">return</span> <span class="p">{</span>
        <span class="na">get_title</span> <span class="p">:</span> <span class="kd">function</span> <span class="p">(){</span>
            <span class="k">return</span> <span class="nx">title</span><span class="p">;</span>
        <span class="p">},</span>
        <span class="na">set_title</span> <span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">_title</span><span class="p">){</span>
            <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">_title</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">String</span><span class="dl">'</span><span class="p">){</span>
                <span class="nx">title</span> <span class="o">=</span> <span class="nx">_title</span>
            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="nx">alert</span><span class="p">(</span><span class="dl">'</span><span class="s1">제목은 문자열이어야 합니다.</span><span class="dl">'</span><span class="p">);</span>
            <span class="p">}</span>

        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
<span class="nx">ghost</span> <span class="o">=</span> <span class="nx">factory_movie</span><span class="p">(</span><span class="dl">'</span><span class="s1">Ghost in the shell</span><span class="dl">'</span><span class="p">);</span>
<span class="nx">matrix</span> <span class="o">=</span> <span class="nx">factory_movie</span><span class="p">(</span><span class="dl">'</span><span class="s1">Matrix</span><span class="dl">'</span><span class="p">);</span>
 
<span class="nx">alert</span><span class="p">(</span><span class="nx">ghost</span><span class="p">.</span><span class="nx">get_title</span><span class="p">());</span>
<span class="nx">alert</span><span class="p">(</span><span class="nx">matrix</span><span class="p">.</span><span class="nx">get_title</span><span class="p">());</span>
 
<span class="nx">ghost</span><span class="p">.</span><span class="nx">set_title</span><span class="p">(</span><span class="dl">'</span><span class="s1">공각기동대</span><span class="dl">'</span><span class="p">);</span>
 
<span class="nx">alert</span><span class="p">(</span><span class="nx">ghost</span><span class="p">.</span><span class="nx">get_title</span><span class="p">());</span>
<span class="nx">alert</span><span class="p">(</span><span class="nx">matrix</span><span class="p">.</span><span class="nx">get_title</span><span class="p">());</span>
</code></pre></div></div>

<h3 id="반드시-알아야할-사항">반드시 알아야할 사항</h3>

<ul>
  <li>
    <p>함수 안에 또 다른 함수를 선언하는 것을 <strong>내부함수</strong>라고 한다. 내부함수를 쓰는 이유는 그 함수에서만 사용하기 때문에 <strong>응집성이 증가</strong>한다.</p>
  </li>
  <li>
    <p>내부함수는 <strong>외부함수의 지역변수에 접근</strong>할 수 있다.</p>
  </li>
  <li>
    <p>아래 예제에서 내부함수는 inner(), 외부함수는 outter()이다.</p>
  </li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">outter</span><span class="p">(){</span>
    <span class="kd">var</span> <span class="nx">title</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">coding everybody</span><span class="dl">'</span><span class="p">;</span>  
    <span class="kd">function</span> <span class="nx">inner</span><span class="p">(){</span>        
        <span class="nx">alert</span><span class="p">(</span><span class="nx">title</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="nx">inner</span><span class="p">();</span>
<span class="p">}</span>
<span class="nx">outter</span><span class="p">();</span>
</code></pre></div></div>

<ul>
  <li>
    <p>아무나 수정할 수 없기 때문에 title변수의 값을 get_title과 set_title맥락에 영향을 주지 않는다.</p>
  </li>
  <li>
    <p>set_title로 변경할 때, if(typeof _title === ‘String’){ }</p>
  </li>
  <li>
    <p>private하게 묶어두고, 수정을 할 때 제한을 둔다. ==&gt; 변수가 안전하게 저장되고, 안전하게 수정될 수 있다.</p>
  </li>
</ul>

<h3 id="클로저의-응용">클로저의 응용</h3>

<ul>
  <li>함수의 외부 변수가 아니다. 내부 함수로 만들어야 한다. <strong>외부 함수의 지역변수 값을 내부 함수가 참조해야 한다.</strong></li>
</ul>
:ET